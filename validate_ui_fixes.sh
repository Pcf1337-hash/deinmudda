#!/bin/bash

# Quick Button and Header Bar Fix Validation
echo "üîß Validating Quick Button and Header Bar fixes..."
echo "=================================================="

# Check header bar overflow fix
echo ""
echo "1. Checking HeaderBar overflow fixes..."

if grep -q "Flexible(" lib/widgets/header_bar.dart; then
    echo "‚úÖ Changed Expanded to Flexible to prevent overflow"
else
    echo "‚ùå Flexible widget not found in HeaderBar"
fi

if grep -q "maxLines: 1" lib/widgets/header_bar.dart; then
    echo "‚úÖ Reduced maxLines to prevent title overflow"
else
    echo "‚ùå maxLines constraint not found in HeaderBar"
fi

if grep -q "height: 2" lib/widgets/header_bar.dart; then
    echo "‚úÖ Reduced spacing to prevent overflow"
else
    echo "‚ùå Reduced spacing not found in HeaderBar"
fi

# Check quick button consistency
echo ""
echo "2. Checking Quick Button consistency fixes..."

if grep -q "width: 80.0" lib/widgets/quick_entry/quick_button_widget.dart; then
    echo "‚úÖ Fixed width to exact 80.0 pixels for consistency"
else
    echo "‚ùå Fixed width not found in QuickButtonWidget"
fi

if grep -q "height: 100.0" lib/widgets/quick_entry/quick_button_widget.dart; then
    echo "‚úÖ Fixed height to exact 100.0 pixels for consistency"
else
    echo "‚ùå Fixed height not found in QuickButtonWidget"
fi

# Check delete state management
echo ""
echo "3. Checking delete operation state management..."

if grep -q "_quickButtons.removeWhere" lib/screens/quick_entry/quick_entry_management_screen.dart; then
    echo "‚úÖ Added immediate local state update on delete"
else
    echo "‚ùå Immediate state update not found in management screen"
fi

if grep -q "await _loadQuickButtons();" lib/screens/quick_entry/quick_entry_management_screen.dart; then
    echo "‚úÖ Added database reload after delete for consistency"
else
    echo "‚ùå Database reload not found in management screen"
fi

# Check scrolling fixes
echo ""
echo "4. Checking ListView scrolling fixes..."

if grep -q "ClampingScrollPhysics" lib/widgets/quick_entry/quick_entry_bar.dart; then
    echo "‚úÖ Added ClampingScrollPhysics to prevent gray/empty state"
else
    echo "‚ùå ClampingScrollPhysics not found in QuickEntryBar"
fi

if grep -q "safeSetState" lib/widgets/quick_entry/quick_entry_bar.dart; then
    echo "‚úÖ Added safe state updates for better reliability"
else
    echo "‚ùå Safe state updates not found in QuickEntryBar"
fi

# Check widget key improvements
echo ""
echo "5. Checking widget key improvements..."

if grep -q "button.dosage.*button.unit.*button.cost" lib/widgets/quick_entry/quick_button_list.dart; then
    echo "‚úÖ Enhanced widget keys to trigger rebuilds on data changes"
else
    echo "‚ùå Enhanced widget keys not found in QuickButtonList"
fi

# Summary
echo ""
echo "üìä VALIDATION SUMMARY:"
echo "====================="

total=8
passed=0

# Count passed checks
[ $(grep -c "Flexible(" lib/widgets/header_bar.dart) -gt 0 ] && ((passed++))
[ $(grep -c "maxLines: 1" lib/widgets/header_bar.dart) -gt 0 ] && ((passed++))
[ $(grep -c "width: 80.0" lib/widgets/quick_entry/quick_button_widget.dart) -gt 0 ] && ((passed++))
[ $(grep -c "height: 100.0" lib/widgets/quick_entry/quick_button_widget.dart) -gt 0 ] && ((passed++))
[ $(grep -c "_quickButtons.removeWhere" lib/screens/quick_entry/quick_entry_management_screen.dart) -gt 0 ] && ((passed++))
[ $(grep -c "await _loadQuickButtons();" lib/screens/quick_entry/quick_entry_management_screen.dart) -gt 0 ] && ((passed++))
[ $(grep -c "ClampingScrollPhysics" lib/widgets/quick_entry/quick_entry_bar.dart) -gt 0 ] && ((passed++))
[ $(grep -c "button.dosage.*button.unit.*button.cost" lib/widgets/quick_entry/quick_button_list.dart) -gt 0 ] && ((passed++))

echo "Passed: $passed/$total checks"

if [ $passed -eq $total ]; then
    echo ""
    echo "üéâ ALL FIXES VALIDATED SUCCESSFULLY!"
    echo ""
    echo "‚úÖ RenderFlex overflow in header_bar.dart fixed"
    echo "‚úÖ Quick Button width consistency (88.0, 80.0, 76.0 ‚Üí 80.0) fixed"
    echo "‚úÖ Delete operation state management improved"
    echo "‚úÖ ListView scrolling gray/empty state fixed"
    echo "‚úÖ Widget keys enhanced for proper updates"
    echo ""
    echo "All reported issues from the problem statement should be resolved."
elif [ $passed -ge 6 ]; then
    echo ""
    echo "‚úÖ MOST FIXES VALIDATED SUCCESSFULLY!"
    echo ""
    echo "Core issues addressed, minor improvements may still be needed."
else
    echo ""
    echo "‚ùå SOME FIXES MAY BE MISSING"
    echo ""
    echo "Please review the failed checks above."
fi