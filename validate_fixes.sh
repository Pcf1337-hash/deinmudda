#!/bin/bash

# Simple validation script to check for common issues in the modified files
echo "üîç Validating fixes for deinmudda app..."

# Check for basic syntax issues in dart files
check_dart_syntax() {
    local file="$1"
    echo "Checking $file..."
    
    # Check for balanced braces
    local open_braces=$(grep -o '{' "$file" | wc -l)
    local close_braces=$(grep -o '}' "$file" | wc -l)
    
    if [ "$open_braces" -ne "$close_braces" ]; then
        echo "‚ùå Unbalanced braces in $file: $open_braces open, $close_braces close"
        return 1
    fi
    
    # Check for balanced parentheses in function calls
    local open_parens=$(grep -o '(' "$file" | wc -l)
    local close_parens=$(grep -o ')' "$file" | wc -l)
    
    if [ "$open_parens" -ne "$close_parens" ]; then
        echo "‚ùå Unbalanced parentheses in $file: $open_parens open, $close_parens close"
        return 1
    fi
    
    echo "‚úÖ Basic syntax check passed for $file"
    return 0
}

# List of modified files
files=(
    "lib/services/timer_service.dart"
    "lib/models/quick_button_config.dart" 
    "lib/services/database_service.dart"
    "lib/screens/home_screen.dart"
    "lib/widgets/countdown_timer_widget.dart"
    "lib/screens/timer_dashboard_screen.dart"
    "lib/screens/quick_entry/quick_button_config_screen.dart"
)

echo "üìÅ Checking modified files..."
all_passed=true

for file in "${files[@]}"; do
    if [ -f "$file" ]; then
        if ! check_dart_syntax "$file"; then
            all_passed=false
        fi
    else
        echo "‚ùå File not found: $file"
        all_passed=false
    fi
done

echo ""
echo "üîç Checking for specific fix implementations..."

# Check timer service fix
if grep -q "Allow multiple timers to run concurrently" lib/services/timer_service.dart; then
    echo "‚úÖ Timer service concurrent timer fix implemented"
else
    echo "‚ùå Timer service fix not found"
    all_passed=false
fi

# Check cost field addition
if grep -q "final double cost;" lib/models/quick_button_config.dart; then
    echo "‚úÖ Cost field added to QuickButtonConfig"
else
    echo "‚ùå Cost field not found in QuickButtonConfig"
    all_passed=false
fi

# Check database migration
if grep -q "cost.*REAL.*DEFAULT.*0.0" lib/services/database_service.dart; then
    echo "‚úÖ Database migration for cost column implemented"
else
    echo "‚ùå Database migration for cost column not found"
    all_passed=false
fi

# Check layout constraints fix
if grep -q "LayoutBuilder" lib/widgets/countdown_timer_widget.dart; then
    echo "‚úÖ Layout constraints fix implemented in countdown timer"
else
    echo "‚ùå Layout constraints fix not found"
    all_passed=false
fi

# Check cost usage in home screen
if grep -q "cost: config.cost" lib/screens/home_screen.dart; then
    echo "‚úÖ Cost usage implemented in home screen quick entry"
else
    echo "‚ùå Cost usage not found in home screen"
    all_passed=false
fi

echo ""
if [ "$all_passed" = true ]; then
    echo "üéâ All validation checks passed!"
    echo "‚úÖ Timer service allows concurrent timers"
    echo "‚úÖ Cost tracking added to quick buttons"  
    echo "‚úÖ UI layout constraints fixed"
    echo "‚úÖ Database migration implemented"
    exit 0
else
    echo "‚ùå Some validation checks failed"
    exit 1
fi